<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">

    <context:annotation-config/>  
	<aop:aspectj-autoproxy />
	<context:component-scan base-package="com.jay.demo" />
	<!-- 读取Properties文件配置信息 -->
	<context:property-placeholder location="classpath:jdbc.properties"
		ignore-unresolvable="true" />

	<!-- 数据库连接池,DBCP -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="timeBetweenEvictionRunsMillis">
			<value>3600000</value><!--1 hours -->
		</property>
		<property name="minEvictableIdleTimeMillis">
			<value>28800000</value><!--8 hours -->
		</property>
	</bean>
	
	<!-- Spring 自带的ORM，需要依赖的 -->
	<bean id = "jdbcTemplate"   
         class = "org.springframework.jdbc.core.JdbcTemplate">   
         <property name = "dataSource" ref="dataSource"/>   
    </bean>  
    
    <!-- Spring整合Hibernate XML配置文件版-->
    <!-- 整合Hibernate4 -->
    <!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> -->
    <!-- XML版配置映射文件  sessionFactory的实现类 org.springframework.orm.hibernate3.LocalSessionFactoryBean -->
<!--     <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />
         这里配置对象关系映射信息
        <property name="mappingResources">  
            <list>  
                 <value>com.prince2270.study.Student.hbm.xml</value>  
            </list>  
        </property> 
        <property name="hibernateProperties">  
            <props>  
                <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>  
                <prop key="hibernate.show_sql">true</prop>  
                <prop key="hibernate.format_sql">true</prop>  
                <prop key="hibernate.hbm2ddl.auto">update</prop>  
                <prop key="hibernate.current_session_context_class">thread</prop>  
                最大抓取深度，如果为0，则关闭默认的外连接抓取。建议值为0-3  
                <prop key="hibernate.max_fetch_depth">1</prop>  
                用于生成有助于调试的注释信息，默认为关闭  
                <prop key="hibernate.use_sql_comments">true</prop>  
            </props>  
        </property>  
    </bean>   -->
    
    <!-- Spring整合Hibernate 注解版-->
    <!-- 注解版配置映射文件  sessionFactory的实现类 org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean -->
   
   <!--  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />
        采用注解形式配置对象关系映射信息  
        <property name="packagesToScan"> 
              <list> 
                   <value>com.spring.learning.*</value> 
              </list> 
        </property>
        <property name="hibernateProperties">  
            <props>  
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>  
                <prop key="hibernate.show_sql">true</prop>  
                <prop key="hibernate.format_sql">true</prop>  
                <prop key="hibernate.hbm2ddl.auto">update</prop>  
                <prop key="hibernate.current_session_context_class">thread</prop>  
                最大抓取深度，如果为0，则关闭默认的外连接抓取。建议值为0-3  
                <prop key="hibernate.max_fetch_depth">1</prop>  
                用于生成有助于调试的注释信息，默认为关闭  
                <prop key="hibernate.use_sql_comments">true</prop>  
            </props>  
        </property>  
    </bean>  
    
    
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">  
        <property name="sessionFactory" ref="sessionFactory"></property>  
    </bean>  -->
    
    
    
    
    <!-- Mybatis整合到SPring中 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-configuration.xml" />
		<property name="mapperLocations"
			value="classpath*:com/jay/demo/bean/mappers/**/*.xml" />
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="typeAliasesPackage" value="com.jay.demo.bean" /> -->
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.jay.demo.dao" />
	</bean>
    
</beans>
